// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "InternalSymbolsBase.pypp.hpp"

namespace bp = boost::python;

#include "SireError/errors.h"

#include "SireFF/errors.h"

#include "SireMol/cgidx.h"

#include "SireMol/molecule.h"

#include "SireMol/mover.hpp"

#include "SireMol/partialmolecule.h"

#include "SireVol/coordgroup.h"

#include "internalparameters.h"

#include "sireglobal.h"

#include "tostring.h"

#include <algorithm>

#include "internalparameters.h"

const char* pvt_get_name(const SireMM::InternalSymbolsBase&){ return "SireMM::InternalSymbolsBase";}

void register_InternalSymbolsBase_class(){

    { //::SireMM::InternalSymbolsBase
        typedef bp::class_< SireMM::InternalSymbolsBase, boost::noncopyable > InternalSymbolsBase_exposer_t;
        InternalSymbolsBase_exposer_t InternalSymbolsBase_exposer = InternalSymbolsBase_exposer_t( "InternalSymbolsBase", "", bp::no_init );
        bp::scope InternalSymbolsBase_scope( InternalSymbolsBase_exposer );
        InternalSymbolsBase_exposer.def( "__str__", &pvt_get_name);
        InternalSymbolsBase_exposer.def( "__repr__", &pvt_get_name);
    }

}
