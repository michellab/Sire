// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "ScaledCLJParameterNames3D.pypp.hpp"

namespace bp = boost::python;

#include "SireBase/countflops.h"

#include "SireBase/errors.h"

#include "SireBase/sparsematrix.hpp"

#include "SireError/errors.h"

#include "SireFF/errors.h"

#include "SireMaths/maths.h"

#include "SireMol/atomcoords.h"

#include "SireMol/mover.hpp"

#include "SireStream/datastream.h"

#include "SireUnits/units.h"

#include "SireVol/cartesian.h"

#include "cljpotential.h"

#include "ljparameter.h"

#include "switchingfunction.h"

#include <QDebug>

#include "cljpotential.h"

SireMM::ScaledCLJParameterNames3D __copy__(const SireMM::ScaledCLJParameterNames3D &other){ return SireMM::ScaledCLJParameterNames3D(other); }

const char* pvt_get_name(const SireMM::ScaledCLJParameterNames3D&){ return "SireMM::ScaledCLJParameterNames3D";}

void register_ScaledCLJParameterNames3D_class(){

    { //::SireMM::ScaledCLJParameterNames3D
        typedef bp::class_< SireMM::ScaledCLJParameterNames3D, bp::bases< SireMM::CLJParameterNames3D, SireMM::CLJParameterNames, SireMM::LJParameterName, SireMM::ChargeParameterName > > ScaledCLJParameterNames3D_exposer_t;
        ScaledCLJParameterNames3D_exposer_t ScaledCLJParameterNames3D_exposer = ScaledCLJParameterNames3D_exposer_t( "ScaledCLJParameterNames3D", "", bp::init< >("") );
        bp::scope ScaledCLJParameterNames3D_scope( ScaledCLJParameterNames3D_exposer );
        ScaledCLJParameterNames3D_exposer.def( "__copy__", &__copy__);
        ScaledCLJParameterNames3D_exposer.def( "__deepcopy__", &__copy__);
        ScaledCLJParameterNames3D_exposer.def( "clone", &__copy__);
        ScaledCLJParameterNames3D_exposer.def( "__str__", &pvt_get_name);
        ScaledCLJParameterNames3D_exposer.def( "__repr__", &pvt_get_name);
    }

}
